{"version":3,"sources":["pages/components/navigationItems.jsx","pages/components/Navigation.jsx","pages/components/ButtonToTextField.jsx","pages/components/DropdownMenu.jsx","pages/components/EditableTitle.jsx","pages/components/IssueCard.jsx","pages/components/CardList.jsx","pages/components/Column.jsx","services/boards.js","pages/Board.jsx","App.jsx","index.jsx"],"names":["mainListItems","ListItem","button","ListItemIcon","ListItemText","primary","secondaryListItems","useStyles","makeStyles","theme","toolbar","paddingRight","toolbarIcon","display","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","inputRoot","color","inputInput","paddingLeft","search","borderRadius","shape","backgroundColor","fade","palette","common","white","searchIcon","height","pointerEvents","notification","NavigationInterface","title","filter","handleFilterChange","useState","open","setOpen","classes","AppBar","className","clsx","Toolbar","IconButton","edge","onClick","Typography","component","variant","noWrap","InputBase","placeholder","root","input","inputProps","value","onChange","Drawer","paper","Divider","List","minWidth","marginTop","addButton","textTransform","secondRow","maxHeight","ButtonToTextField","props","buttonPressed","onSubmit","onTextFieldSubmit","TextField","size","label","textFieldLabel","textFieldValue","onKeyDown","event","keyCode","onTextFieldChange","autoFocus","multiline","Button","onCancel","onButtonClick","focusedButton","deleteMenuItem","DropdownMenu","onClose","onDelete","popupAnchor","setPopupAnchor","currentTarget","disableRipple","anchorEl","Boolean","getContentAnchorEl","anchorOrigin","vertical","horizontal","elevation","MenuListProps","disablePadding","keepMounted","MenuItem","defaultProps","text","cursor","textField","paddingInline","paddingBlock","EditableTitle","initialTitle","TypographyProps","setTitle","openEdit","setOpenEdit","toggleEdit","handleSubmit","preventDefault","target","onBlur","role","tabIndex","card","marginBottom","boxShadow","opacity","dropdown","top","right","dropdownFocus","dialog","grey","closeButton","description","marginBlock","fontFamily","descriptionButton","descriptionTextArea","resize","outline","light","IssueCard","index","columnTitle","deleteCard","updateCard","openDialog","setOpenDialog","openMenu","setOpenMenu","setDescription","editDescription","setEditDescription","resetDescription","updateDescription","draggableId","_id","provided","Box","draggableProps","dragHandleProps","ref","innerRef","Dialog","PaperProps","fullWidth","scroll","DialogTitle","disableTypography","newTitle","DialogContent","fontWeight","fontSize","type","style","ButtonBase","CardList","React","memo","cards","toLowerCase","includes","map","propTypes","PropTypes","arrayOf","string","isRequired","func","paddingBottom","flexDirection","header","Column","column","deleteColumn","updateColumn","newCardRequested","setNewCardRequested","newCardTitle","setNewCardTitle","handleDelete","editTitle","cancelNewCard","addCard","concat","updatedCard","a","cardId","idx","findIndex","newCards","Array","from","splice","Paper","flexGrow","gutterBottom","droppableId","minHeight","droppableProps","e","baseUrl","getBoard","axios","get","response","data","updateBoard","board","put","appBarSpacer","content","overflow","container","paddingTop","ProjectBoard","newColumnRequested","setNewColumnRequested","newColumnTitle","setNewColumnTitle","setFilter","columns","setBoard","useEffect","boardService","retrievedBoard","updateBoardFrontend","newBoard","updateBoardBackend","savedBoard","cancelNewColumn","addColumn","newColumn","updatedColumn","newCardAdded","col","columnId","newColumns","onDragEnd","destination","source","draggedColumn","startColumn","find","endColumn","draggedCard","changedColumn","startColumnCards","newStartColumn","endColumnCards","newEndColumn","Navigation","direction","App","CssBaseline","Board","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d149509.chunk.js","sourcesContent":["import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nexport const mainListItems = (\n  <>\n    <ListItem button>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Team Members\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <BarChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Insights\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <LayersIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Integrations\" />\n    </ListItem>\n  </>\n);\n\nexport const secondaryListItems = (\n  <>\n    <ListItem button>\n      <ListItemIcon>\n        <SettingsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Settings\" />\n    </ListItem>\n  </>\n);\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport AppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport List from '@material-ui/core/List';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { makeStyles, fade } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { mainListItems, secondaryListItems } from './navigationItems';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  notification: {\n    marginLeft: 'auto',\n  },\n}));\n\nconst NavigationInterface = ({ title, filter, handleFilterChange }) => {\n  const [open, setOpen] = useState(false);\n  const classes = useStyles();\n\n  const handleDrawerOpen = () => setOpen(true);\n  const handleDrawerClose = () => setOpen(false);\n\n  return (\n    <>\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap>\n            {title}\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Filter cards\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n              value={filter}\n              onChange={handleFilterChange}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n    </>\n  );\n};\n\nNavigationInterface.propTypes = {\n  title: PropTypes.string.isRequired,\n  filter: PropTypes.string.isRequired,\n  handleFilterChange: PropTypes.func.isRequired,\n};\n\nexport default NavigationInterface;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: '200px',\n    marginTop: '10px',\n  },\n  addButton: {\n    textTransform: 'none',\n    // fontFamily: 'Roboto',\n    padding: theme.spacing(1),\n  },\n  secondRow: {\n    display: 'flex',\n    marginTop: '5px',\n    maxHeight: '30px',\n  },\n}));\n\nconst ButtonToTextField = (props) => {\n  const classes = useStyles();\n\n  const detectEnterKey = (event) => {\n    if (event.keyCode === 13) {\n      props.onTextFieldSubmit(event);\n    }\n  };\n\n  if (props.buttonPressed) {\n    return (\n      <div className={classes.root}>\n        <form onSubmit={props.onTextFieldSubmit}>\n          <TextField\n            variant=\"outlined\"\n            size=\"small\"\n            label={props.textFieldLabel}\n            value={props.textFieldValue}\n            onKeyDown={detectEnterKey}\n            onChange={props.onTextFieldChange}\n            autoFocus\n            multiline\n          />\n        </form>\n        <div className={classes.secondRow}>\n          <Button\n            variant=\"contained\"\n            size=\"small\"\n            color=\"primary\"\n            className={classes.addButton}\n            onClick={props.onTextFieldSubmit}\n          >\n            {props.title}\n          </Button>\n          <IconButton aria-label=\"delete\" onClick={props.onCancel}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className={classes.root}>\n      <Button\n        color=\"primary\"\n        className={classes.addButton}\n        onClick={props.onButtonClick}\n      >\n        {props.title}\n      </Button>\n    </div>\n  );\n};\n\nButtonToTextField.propTypes = {\n  buttonPressed: PropTypes.bool.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  onTextFieldSubmit: PropTypes.func.isRequired,\n  textFieldLabel: PropTypes.string.isRequired,\n  textFieldValue: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  onTextFieldChange: PropTypes.func.isRequired,\n  onButtonClick: PropTypes.func.isRequired,\n};\n\nexport default ButtonToTextField;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nconst useStyles = makeStyles({\n  button: {\n    color: 'darkgray',\n    '&:hover': {\n      backgroundColor: 'inherit',\n      color: 'black',\n    },\n  },\n  focusedButton: {\n    backgroundColor: 'inherit',\n    color: 'black',\n  },\n  deleteMenuItem: {\n    '&:hover': {\n      backgroundColor: '#e62020',\n      color: 'white',\n    },\n  },\n});\n\nconst DropdownMenu = ({ onClick, onClose, onDelete }) => {\n  const [popupAnchor, setPopupAnchor] = useState(null);\n\n  const classes = useStyles();\n\n  const handleDelete = () => {\n    setPopupAnchor(null);\n    onDelete();\n  };\n\n  const handleClick = (event) => {\n    setPopupAnchor(event.currentTarget);\n    onClick();\n  };\n\n  const handleClose = () => {\n    setPopupAnchor(null);\n    onClose();\n  };\n\n  return (\n    <>\n      <IconButton\n        className={popupAnchor ? classes.focusedButton : classes.button}\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        disableRipple\n      >\n        <MoreVertIcon />\n      </IconButton>\n      <Menu\n        anchorEl={popupAnchor}\n        open={Boolean(popupAnchor)}\n        onClose={handleClose}\n        getContentAnchorEl={null}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n        elevation={4}\n        MenuListProps={{ disablePadding: true }}\n        keepMounted\n      >\n        <MenuItem\n          className={classes.deleteMenuItem}\n          onClick={handleDelete}\n        >\n          Delete\n        </MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nDropdownMenu.propTypes = {\n  onClick: PropTypes.func,\n  onClose: PropTypes.func,\n  onDelete: PropTypes.func.isRequired,\n};\n\nDropdownMenu.defaultProps = {\n  onClick: () => { },\n  onClose: () => { },\n};\n\nexport default DropdownMenu;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(() => ({\n  text: {\n    cursor: 'pointer',\n  },\n  textField: {\n    paddingInline: '10px',\n    paddingBlock: '5px',\n  },\n}));\n\nconst EditableTitle = ({ initialTitle, onSubmit, TypographyProps }) => {\n  const [title, setTitle] = useState(initialTitle);\n  const [openEdit, setOpenEdit] = useState(false);\n  const classes = useStyles();\n\n  const toggleEdit = () => {\n    setOpenEdit(!openEdit);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setOpenEdit(false);\n    onSubmit(title);\n  };\n\n  const text = () => (\n    <div\n      className={classes.text}\n      onClick={toggleEdit}\n      onKeyDown={toggleEdit}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <Typography {...TypographyProps}>\n        {title}\n      </Typography>\n    </div>\n  );\n\n  const textField = () => (\n    <form onSubmit={handleSubmit}>\n      <TextField\n        inputProps={{\n          className: classes.textField,\n        }}\n        variant=\"outlined\"\n        value={title}\n        onChange={({ target }) => setTitle(target.value)}\n        onBlur={handleSubmit}\n        autoFocus\n      />\n    </form>\n  );\n\n  return (\n    openEdit ? textField() : text()\n  );\n};\n\nEditableTitle.propTypes = {\n  initialTitle: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  TypographyProps: PropTypes.object,\n};\n\nexport default EditableTitle;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Draggable } from 'react-beautiful-dnd';\nimport DropdownMenu from './DropdownMenu';\nimport EditableTitle from './EditableTitle';\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    marginBottom: '10px',\n    backgroundColor: 'white',\n    borderRadius: '2px',\n    boxShadow: ' 0 1.25px 1px 0 rgba(0, 0, 0, 0.15)',\n    '&:hover': {\n      // otherwise, cursor defaults to grab\n      cursor: 'pointer',\n      '& + $dropdown': {\n        opacity: 1,\n      },\n    },\n  },\n  dropdown: {\n    opacity: 0,\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    '&:hover': {\n      opacity: 1,\n    },\n  },\n  dropdownFocus: {\n    opacity: 1,\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n  dialog: {\n    backgroundColor: theme.palette.grey[50],\n    boxShadow: 'none',\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  description: {\n    marginBlock: '10px',\n    padding: '4px 10px',\n    height: '60px',\n    width: '92%',\n    fontFamily: 'arial',\n  },\n  descriptionButton: {\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    backgroundColor: '#F0F0F0',\n    '&:hover': {\n      backgroundColor: '#E8E8E8',\n    },\n  },\n  descriptionTextArea: {\n    resize: 'none',\n    fontFamily: 'roboto, sans-serif',\n    '&:focus': {\n      outline: 'none',\n      boxShadow: `0 0 0 2px ${theme.palette.primary.light}`,\n    },\n  },\n}));\n\nconst IssueCard = ({\n  card,\n  index,\n  columnTitle,\n  deleteCard,\n  updateCard,\n}) => {\n  const classes = useStyles();\n  const [openDialog, setOpenDialog] = useState(false);\n  const [openMenu, setOpenMenu] = useState(false);\n  const [description, setDescription] = useState(card.description ? card.description : '');\n  const [editDescription, setEditDescription] = useState(false);\n\n  const resetDescription = () => {\n    setDescription(card.description);\n    setEditDescription(false);\n  };\n\n  const updateDescription = () => {\n    setEditDescription(false);\n    updateCard({\n      ...card,\n      description,\n    });\n  };\n\n  const updateTitle = (newTitle) => {\n    updateCard({\n      ...card,\n      title: newTitle,\n    });\n  };\n\n  const descriptionButton = () => {\n    const placeholderText = () => (\n      <Box color=\"gray\">\n        <Typography>\n          Enter a description...\n        </Typography>\n      </Box>\n    );\n\n    const text = () => (\n      <Typography>\n        {description}\n      </Typography>\n    );\n\n    return (\n      <ButtonBase\n        className={`${classes.description} ${classes.descriptionButton}`}\n        onClick={() => setEditDescription(true)}\n        disableRipple\n      >\n        {description === ''\n          ? placeholderText()\n          : text()}\n      </ButtonBase>\n    );\n  };\n\n  const descriptionInput = () => (\n    <form onSubmit={updateDescription}>\n      <textarea\n        className={`${classes.description} ${classes.descriptionTextArea}`}\n        type=\"text\"\n        value={description}\n        onChange={({ target }) => setDescription(target.value)}\n        placeholder=\"Enter a description...\"\n        aria-label={`Enter a description for the task ${card.title}`}\n        // eslint-disable-next-line jsx-a11y/no-autofocus\n        autoFocus\n      />\n      <Button\n        style={{ textTransform: 'none' }}\n        variant=\"contained\"\n        size=\"small\"\n        color=\"primary\"\n        className={classes.addButton}\n        type=\"submit\"\n      >\n        Save\n      </Button>\n      <IconButton aria-label=\"delete\" onClick={resetDescription}>\n        <CloseIcon />\n      </IconButton>\n    </form>\n  );\n\n  return (\n    <>\n      <Draggable draggableId={card._id} index={index}>\n        {(provided) => (\n          <Box display=\"flex\" position=\"relative\" cursor=\"pointer\">\n            <ListItem\n              className={classes.card}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              ref={provided.innerRef}\n              button\n              disableRipple\n              onClick={() => setOpenDialog(true)}\n            >\n              <ListItemText primary={card.title} />\n            </ListItem>\n            <div className={openMenu ? classes.dropdownFocus : classes.dropdown}>\n              <DropdownMenu\n                onDelete={deleteCard}\n                onClick={() => setOpenMenu(true)}\n                onClose={() => setOpenMenu(false)}\n              />\n            </div>\n          </Box>\n        )}\n      </Draggable>\n\n      <Dialog\n        PaperProps={{\n          className: classes.dialog,\n        }}\n        open={openDialog}\n        onClose={() => setOpenDialog(false)}\n        fullWidth\n        scroll=\"body\"\n      >\n        <DialogTitle onClose={() => setOpenDialog(false)} disableTypography>\n          <Box display=\"flex\" alignItems=\"flex-end\">\n            <Box marginRight=\"10px\">\n              <AssignmentIcon />\n            </Box>\n            <EditableTitle\n              initialTitle={card.title}\n              TypographyProps={{\n                variant: 'h5',\n              }}\n              onSubmit={updateTitle}\n            />\n          </Box>\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={() => setOpenDialog(false)}>\n            <CloseIcon />\n          </IconButton>\n          <Box marginLeft=\"36px\" color=\"#505050\">\n            <Typography variant=\"body2\">\n              {`in list ${columnTitle}`}\n            </Typography>\n          </Box>\n        </DialogTitle>\n\n        <DialogContent>\n          <Box fontWeight=\"fontWeightBold\" fontSize=\"16px\">\n            Description\n          </Box>\n          {editDescription ? descriptionInput() : descriptionButton()}\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n};\n\nIssueCard.propTypes = {\n  card: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    _id: PropTypes.string.isRequired,\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  columnTitle: PropTypes.string.isRequired,\n  deleteCard: PropTypes.func.isRequired,\n  updateCard: PropTypes.func.isRequired,\n};\n\nexport default IssueCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IssueCard from './IssueCard';\n\n/* React.memo prevents dragging a card over a column from\n * re-rendering the tasks in that column. */\nconst CardList = React.memo(({\n  cards,\n  filter,\n  columnTitle,\n  deleteCard,\n  updateCard,\n}) => (\n  cards\n    .filter((card) => (\n      card.title.toLowerCase().includes(filter.toLowerCase())\n    ))\n    .map((card, index) => (\n      <IssueCard\n        key={card._id}\n        card={card}\n        index={index}\n        columnTitle={columnTitle}\n        updateCard={updateCard}\n        deleteCard={deleteCard}\n      />\n    ))\n));\n\nCardList.propTypes = {\n  cards: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      _id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  filter: PropTypes.string.isRequired,\n  columnTitle: PropTypes.string.isRequired,\n  deleteCard: PropTypes.func.isRequired,\n  updateCard: PropTypes.func.isRequired,\n};\n\nexport default CardList;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Box from '@material-ui/core/Box';\nimport List from '@material-ui/core/List';\nimport Paper from '@material-ui/core/Paper';\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\nimport ButtonToTextField from './ButtonToTextField';\nimport CardList from './CardList';\nimport DropdownMenu from './DropdownMenu';\nimport EditableTitle from './EditableTitle';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginLeft: theme.spacing(1.5),\n    paddingBottom: theme.spacing(1),\n    paddingInline: theme.spacing(1),\n    backgroundColor: theme.palette.grey[50],\n    borderRadius: 0,\n    minWidth: '240px',\n    width: '280px',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n  },\n  title: {\n    fontWeight: 'bold',\n    paddingLeft: theme.spacing(2),\n  },\n  header: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: '-8px',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n}));\n\nconst Column = ({\n  column,\n  index,\n  filter,\n  deleteColumn,\n  updateColumn,\n}) => {\n  const [newCardRequested, setNewCardRequested] = useState(false);\n  const [newCardTitle, setNewCardTitle] = useState('');\n  const classes = useStyles();\n\n  const handleDelete = () => {\n    deleteColumn(column._id);\n  };\n\n  const editTitle = (newTitle) => {\n    updateColumn({\n      ...column,\n      title: newTitle,\n    });\n  };\n\n  const cancelNewCard = () => {\n    setNewCardRequested(false);\n    setNewCardTitle('');\n  };\n\n  const addCard = () => {\n    // the new card requires a title\n    if (newCardTitle !== '') {\n      setNewCardRequested(false);\n      setNewCardTitle('');\n\n      updateColumn({\n        ...column,\n        cards: column.cards.concat({ title: newCardTitle }),\n      }, true);\n    }\n  };\n\n  const updateCard = async (updatedCard) => {\n    updateColumn({\n      ...column,\n      cards: column.cards\n        .map((card) => (card._id !== updatedCard._id ? card : updatedCard)),\n    });\n  };\n\n  const deleteCard = async (cardId) => {\n    const idx = column.cards.findIndex((card) => card._id === cardId);\n    const newCards = Array.from(column.cards);\n    newCards.splice(idx, 1);\n\n    updateColumn({\n      ...column,\n      cards: newCards,\n    });\n  };\n\n  return (\n    <Draggable draggableId={column._id} index={index}>\n      {(provided) => (\n        <Paper\n          className={classes.paper}\n          elevation={0}\n          {...provided.draggableProps}\n          ref={provided.innerRef}\n        >\n          <div className={classes.header} {...provided.dragHandleProps}>\n            <Box flexGrow={1}>\n              <EditableTitle\n                initialTitle={column.title}\n                onSubmit={editTitle}\n                TypographyProps={{\n                  className: classes.title,\n                  gutterBottom: true,\n                }}\n              />\n            </Box>\n            <Box marginRight=\"-12px\">\n              <DropdownMenu onDelete={handleDelete} />\n            </Box>\n          </div>\n          <List>\n            <Droppable droppableId={column._id} type=\"card\">\n              {/* eslint-disable-next-line no-shadow */}\n              {(provided) => (\n                // without min height, cannot drag cards into empty columns\n                <Box minHeight=\"2px\" ref={provided.innerRef} {...provided.droppableProps}>\n                  <CardList\n                    cards={column.cards}\n                    filter={filter}\n                    columnTitle={column.title}\n                    updateCard={updateCard}\n                    deleteCard={deleteCard}\n                  />\n                  {provided.placeholder}\n                </Box>\n              )}\n            </Droppable>\n            <ButtonToTextField\n              buttonPressed={newCardRequested}\n              onButtonClick={() => setNewCardRequested(true)}\n              onCancel={cancelNewCard}\n              onTextFieldChange={(e) => setNewCardTitle(e.target.value)}\n              onTextFieldSubmit={addCard}\n              textFieldLabel=\"Card title\"\n              textFieldValue={newCardTitle}\n              title=\"Add Card\"\n            />\n          </List>\n        </Paper>\n      )}\n    </Draggable>\n  );\n};\n\nColumn.propTypes = {\n  column: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    cards: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        _id: PropTypes.string.isRequired,\n      }),\n    ).isRequired,\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  filter: PropTypes.string.isRequired,\n  deleteColumn: PropTypes.func.isRequired,\n  updateColumn: PropTypes.func.isRequired,\n};\n\nexport default Column;\n","import axios from 'axios';\n\nconst baseUrl = '/api/boards';\n\nconst getBoard = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data[0];\n};\n\nconst updateBoard = async (board) => {\n  const response = await axios.put(`${baseUrl}/${board._id}`, board);\n  return response.data;\n};\n\nexport default {\n  getBoard,\n  updateBoard,\n};\n","import React, { useState, useEffect } from 'react';\nimport Box from '@material-ui/core/Box';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport NavigationInterface from './components/Navigation';\nimport Column from './components/Column';\nimport ButtonToTextField from './components/ButtonToTextField';\nimport boardService from '../services/boards';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    backgroundColor: theme.palette.grey[200],\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'flex-start',\n  },\n}));\n\nconst ProjectBoard = () => {\n  const [newColumnRequested, setNewColumnRequested] = useState(false);\n  const [newColumnTitle, setNewColumnTitle] = useState('');\n  const [filter, setFilter] = useState('');\n  const [board, setBoard] = useState({\n    title: '',\n    columns: [],\n  });\n\n  const classes = useStyles();\n\n  // load board data from server on startup\n  useEffect(async () => {\n    const retrievedBoard = await boardService.getBoard();\n    setBoard(retrievedBoard);\n  }, []);\n\n  /* Update the frontend before the backend. Use for re-ordering cards and columns\n   * with drag-and-drop, as updating the local state first prevents lag. */\n  const updateBoardFrontend = async (newBoard) => {\n    setBoard(newBoard);\n    await boardService.updateBoard(newBoard);\n  };\n\n  /* Update the backend before the frontend. Use for adding and updating columns and cards,\n   * as the app relies on the server to set the \"_id\" fields of these objects. */\n  const updateBoardBackend = async (newBoard) => {\n    const savedBoard = await boardService.updateBoard(newBoard);\n    setBoard(savedBoard);\n  };\n\n  const cancelNewColumn = () => {\n    setNewColumnRequested(false);\n    setNewColumnTitle('');\n  };\n\n  const addColumn = async (event) => {\n    // prevent form submission from reloading page\n    event.preventDefault();\n\n    if (newColumnTitle !== '') {\n      const newColumn = {\n        title: newColumnTitle,\n        cards: [],\n      };\n\n      setNewColumnRequested(false);\n      setNewColumnTitle('');\n\n      updateBoardBackend({\n        ...board,\n        columns: board.columns.concat(newColumn),\n      });\n    }\n  };\n\n  const updateColumn = async (updatedColumn, newCardAdded) => {\n    const newBoard = {\n      ...board,\n      columns: board.columns\n        .map((col) => (col._id !== updatedColumn._id ? col : updatedColumn)),\n    };\n\n    // adding a card requires the backend to generate an id for the card\n    if (newCardAdded) updateBoardBackend(newBoard);\n\n    else updateBoardFrontend(newBoard);\n  };\n\n  const deleteColumn = async (columnId) => {\n    const index = board.columns.findIndex((col) => col._id === columnId);\n    const newColumns = Array.from(board.columns);\n    newColumns.splice(index, 1);\n\n    updateBoardFrontend({\n      ...board,\n      columns: newColumns,\n    });\n  };\n\n  const onDragEnd = async ({ destination, source, type }) => {\n    // make sure that the destination is valid\n    if (!destination) return;\n\n    // make sure that user dragged card/column to new location\n    if (\n      destination.droppableId === source.droppableId\n      && destination.index === source.index\n    ) {\n      return;\n    }\n\n    // Move a column\n    if (type === 'column') {\n      const newColumns = Array.from(board.columns);\n      const draggedColumn = newColumns.splice(source.index, 1)[0];\n      newColumns.splice(destination.index, 0, draggedColumn);\n\n      updateBoardFrontend({\n        ...board,\n        columns: newColumns,\n      });\n      return;\n    }\n\n    const startColumn = board.columns.find((col) => col._id === source.droppableId);\n    const endColumn = board.columns.find((col) => col._id === destination.droppableId);\n\n    // Move a card within a column\n    if (startColumn === endColumn) {\n      // preserve immutability by creating a new copy of the card array\n      const newCards = Array.from(startColumn.cards);\n\n      // remove the card from the source column\n      const draggedCard = newCards.splice(source.index, 1)[0];\n\n      // insert the task at the destination index\n      newCards.splice(destination.index, 0, draggedCard);\n\n      const changedColumn = {\n        ...startColumn,\n        cards: newCards,\n      };\n\n      updateBoardFrontend({\n        ...board,\n        columns: board.columns\n          .map((col) => (col._id !== changedColumn._id ? col : changedColumn)),\n      });\n      return;\n    }\n\n    // Move a card between columns\n    const startColumnCards = Array.from(startColumn.cards);\n    const draggedCard = startColumnCards.splice(source.index, 1)[0];\n    const newStartColumn = {\n      ...startColumn,\n      cards: startColumnCards,\n    };\n\n    const endColumnCards = Array.from(endColumn.cards);\n    endColumnCards.splice(destination.index, 0, draggedCard);\n    const newEndColumn = {\n      ...endColumn,\n      cards: endColumnCards,\n    };\n\n    updateBoardFrontend({\n      ...board,\n      columns: board.columns\n        .map((col) => {\n          if (col._id === newStartColumn._id) return newStartColumn;\n          if (col._id === newEndColumn._id) return newEndColumn;\n          return col;\n        }),\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      {/* the top bar and side menu */}\n      <NavigationInterface\n        title={board.title}\n        filter={filter}\n        handleFilterChange={(event) => setFilter(event.target.value)}\n      />\n      <DragDropContext onDragEnd={onDragEnd}>\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Droppable droppableId=\"all-columns\" type=\"column\" direction=\"horizontal\">\n            {(provided) => (\n              <div\n                className={classes.container}\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n                {board.columns.map((column, index) => (\n                  <Column\n                    key={column._id}\n                    column={column}\n                    index={index}\n                    filter={filter}\n                    updateColumn={updateColumn}\n                    deleteColumn={deleteColumn}\n                  />\n                ))}\n                {provided.placeholder}\n                {/* Initially a button for adding a column to the board. If the button is\n                    pressed, turns into a text field that requests a name for the column */}\n                <Box marginLeft={1.5}>\n                  <ButtonToTextField\n                    buttonPressed={newColumnRequested}\n                    onButtonClick={() => setNewColumnRequested(true)}\n                    onCancel={cancelNewColumn}\n                    onTextFieldChange={(event) => setNewColumnTitle(event.target.value)}\n                    onTextFieldSubmit={addColumn}\n                    textFieldLabel=\"Column title\"\n                    textFieldValue={newColumnTitle}\n                    title=\"Add Column\"\n                  />\n                </Box>\n              </div>\n            )}\n          </Droppable>\n        </main>\n      </DragDropContext>\n    </div>\n  );\n};\n\nexport default ProjectBoard;\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport Board from './pages/Board';\n\nconst App = () => (\n  <>\n    <CssBaseline />\n    <Board />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  // eslint-disable-next-line no-undef\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}