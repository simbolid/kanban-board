{"version":3,"sources":["components/board/EditableTitle.jsx","services/boards.js","components/DrawerList.jsx","components/Navigation.jsx","components/Spinner.jsx","components/board/ButtonToTextField.jsx","components/board/CardDialog.jsx","components/board/DropdownMenu.jsx","components/board/IssueCard.jsx","components/board/CardList.jsx","components/board/Column.jsx","pages/Board.jsx"],"names":["useStyles","makeStyles","text","cursor","props","textField","paddingInline","paddingBlock","height","backgroundColor","smallTextField","fontSize","largeTextField","fontWeight","EditableTitle","React","forwardRef","ref","initialTitle","onSubmit","TypographyProps","size","disableClick","useState","title","setTitle","isEditing","setIsEditing","classes","inputRef","useRef","toggle","useEffect","current","focus","handleSubmit","event","preventDefault","className","onClick","onKeyDown","role","tabIndex","useImperativeHandle","mouseEvent","onClickAway","InputProps","inputProps","clsx","variant","color","value","onChange","target","fullWidth","propTypes","PropTypes","string","isRequired","func","object","bool","defaultProps","baseUrl","getBoard","id","a","axios","get","response","data","getBoards","addBoard","newBoard","post","deleteBoard","delete","updateBoard","board","put","_id","icon","marginLeft","minWidth","listItem","DrawerList","urlID","Box","grey","List","ListItem","button","component","Link","to","ListItemIcon","style","ListItemText","primary","undefined","drawerWidth","theme","toolbar","paddingRight","toolbarIcon","display","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","borderBottom","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","easeOut","enteringScreen","menuButton","marginRight","menuButtonHidden","flexShrink","drawerPaper","inputRoot","inputInput","spacing","paddingLeft","breakpoints","up","search","position","border","borderRadius","shape","fade","palette","searchIcon","pointerEvents","root","appBarSpacer","content","overflow","contentShift","NavigationInterface","children","filter","handleFilterChange","handleTitleChange","boardFeatures","open","setOpen","AppBar","elevation","Toolbar","IconButton","edge","nowrap","Typography","noWrap","InputBase","placeholder","input","Drawer","paper","Spinner","top","left","marginTop","addButton","secondRow","maxHeight","ButtonToTextField","label","openTextField","setOpenTextField","setText","handleOpen","handleCancel","detectEnterKey","keyCode","TextField","autoFocus","multiline","Button","dialog","boxShadow","closeButton","right","descriptionCloseButton","description","marginBlock","fontFamily","descriptionButton","descriptionTextArea","resize","outline","light","CardDialog","card","columnTitle","handleClose","updateTitle","updateDescription","editDescription","setEditDescription","setDescription","resetDescription","handleDescriptionSubmit","Dialog","PaperProps","onClose","scroll","DialogTitle","disableTypography","flexGrow","DialogContent","type","ButtonBase","focusedButton","menuItem","red","DropdownMenu","onRename","onDelete","popupAnchor","setPopupAnchor","currentTarget","Menu","anchorEl","Boolean","getContentAnchorEl","anchorOrigin","vertical","horizontal","MenuListProps","disablePadding","keepMounted","MenuItem","Divider","parent","opacity","cardFocus","dropdown","dropdownFocus","IssueCard","index","deleteCard","updateCard","openDialog","setOpenDialog","openMenu","setOpenMenu","editingTitle","setEditingTitle","titleRef","setTimeout","handleDelete","handleRename","handleDialogOpen","handleMenuOpen","handleMenuClose","draggableId","provided","draggableProps","dragHandleProps","innerRef","CardList","memo","cards","toLowerCase","includes","map","arrayOf","paddingBottom","flexDirection","header","marginBottom","Column","column","deleteColumn","updateColumn","editTitle","newTitle","addCard","concat","updatedCard","cardId","idx","findIndex","newCards","Array","from","splice","Paper","gutterBottom","droppableId","minHeight","droppableProps","container","Board","match","setFilter","columns","setBoard","boardService","params","retrievedBoard","updateBoardFrontend","updateBoardBackend","savedBoard","addColumn","newColumn","updatedColumn","newCardAdded","col","columnId","newColumns","onDragEnd","destination","source","draggedColumn","startColumn","find","endColumn","draggedCard","changedColumn","startColumnCards","newStartColumn","endColumnCards","newEndColumn","Navigation","url_id","direction"],"mappings":"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","file":"static/js/9.2f0d55ed.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef, useImperativeHandle } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  text: {\n    cursor: (props) => props.cursor,\n  },\n  textField: {\n    paddingInline: '10px',\n    paddingBlock: '5px',\n    height: '16px',\n    backgroundColor: (props) => props.backgroundColor,\n  },\n  smallTextField: {\n    height: '14px',\n    fontSize: '0.875rem',\n  },\n  largeTextField: {\n    height: '22px',\n    fontSize: '1.25rem',\n    fontWeight: '500',\n  },\n});\n\nconst EditableTitle = React.forwardRef(({\n  initialTitle,\n  onSubmit,\n  TypographyProps,\n  size,\n  disableClick,\n  ...props\n}, ref) => {\n  const [title, setTitle] = useState(initialTitle);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const classes = useStyles(props);\n  const inputRef = useRef(false);\n\n  const toggle = () => {\n    setIsEditing(!isEditing);\n  };\n\n  /* We have to manually focus input because autofocus does not work\n     when the input field is opened from the drop-down menu. */\n  useEffect(() => {\n    if (isEditing) {\n      inputRef.current.focus();\n    }\n  }, [isEditing]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (title !== '') {\n      setIsEditing(false);\n      onSubmit(title);\n    }\n  };\n\n  const clickableText = () => (\n    <div\n      className={classes.text}\n      onClick={toggle}\n      onKeyDown={toggle}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <Typography {...TypographyProps}>\n        {title}\n      </Typography>\n    </div>\n  );\n\n  const disabledText = () => (\n    <div className={classes.text}>\n      <Typography {...TypographyProps}>\n        {title}\n      </Typography>\n    </div>\n  );\n\n  const text = disableClick ? disabledText() : clickableText();\n\n  /* ClickAwayListener's mouse event must be mouse down so that preventDefault()\n     prevent the blur event. (Event order is mousedown -> blur -> mouseup -> click) */\n  const textField = () => (\n    <ClickAwayListener mouseEvent=\"onMouseDown\" onClickAway={handleSubmit}>\n      <form onSubmit={handleSubmit}>\n        <TextField\n          className={classes.text}\n          InputProps={{\n            inputProps: {\n              className: clsx(\n                classes.textField,\n                (size === 'small') && classes.smallTextField,\n                (size === 'large') && classes.largeTextField,\n              ),\n            },\n          }}\n          variant=\"outlined\"\n          color=\"secondary\"\n          value={title}\n          onChange={({ target }) => setTitle(target.value)}\n          inputRef={inputRef}\n          fullWidth\n        />\n      </form>\n    </ClickAwayListener>\n  );\n\n  useImperativeHandle(ref, () => ({\n    toggle,\n  }));\n\n  return (\n    isEditing ? textField() : text\n  );\n});\n\nEditableTitle.propTypes = {\n  initialTitle: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  TypographyProps: PropTypes.object,\n  disableClick: PropTypes.bool,\n  size: PropTypes.string,\n  cursor: PropTypes.string,\n  backgroundColor: PropTypes.string,\n};\n\nEditableTitle.defaultProps = {\n  TypographyProps: { },\n  disableClick: false,\n  size: 'medium',\n  cursor: 'pointer',\n  backgroundColor: 'inherit',\n};\n\nexport default EditableTitle;\n","import axios from 'axios';\n\nconst baseUrl = '/api/boards';\n\nconst getBoard = async (id) => {\n  const response = await axios.get(`${baseUrl}/${id}`);\n  return response.data;\n};\n\nconst getBoards = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst addBoard = async (newBoard) => {\n  const response = await axios.post(baseUrl, newBoard);\n  return response.data;\n};\n\nconst deleteBoard = async (id) => {\n  await axios.delete(`${baseUrl}/${id}`);\n};\n\nconst updateBoard = async (board) => {\n  const response = await axios.put(`${baseUrl}/${board._id}`, board);\n  return response.data;\n};\n\nexport default {\n  getBoard,\n  getBoards,\n  addBoard,\n  deleteBoard,\n  updateBoard,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport HomeIcon from '@material-ui/icons/Home';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport DeveloperBoardIcon from '@material-ui/icons/DeveloperBoard';\nimport { grey } from '@material-ui/core/colors';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n  icon: {\n    marginLeft: '10px',\n    minWidth: '30px',\n  },\n  text: {\n    marginLeft: '20px',\n  },\n  listItem: {\n    '&:hover': {\n      backgroundColor: '#1f4437',\n    },\n  },\n});\n\n/* navigation items that are only visible once the user has\n * selected a board */\nconst DrawerList = ({ urlID }) => {\n  const classes = useStyles();\n\n  return (\n    <Box color={grey[300]}>\n      <List>\n        <ListItem\n          className={classes.listItem}\n          button\n          component={Link}\n          to=\"/\"\n        >\n          <ListItemIcon className={classes.icon}>\n            <HomeIcon style={{ color: grey[500] }} />\n          </ListItemIcon>\n          <ListItemText className={classes.text} primary=\"Home\" />\n        </ListItem>\n        <ListItem\n          className={classes.listItem}\n          button\n          component={Link}\n          to=\"/dashboard\"\n        >\n          <ListItemIcon className={classes.icon}>\n            <DashboardIcon style={{ color: grey[500] }} />\n          </ListItemIcon>\n          <ListItemText className={classes.text} primary=\"Dashboard\" />\n        </ListItem>\n        { urlID ? (\n          <>\n            <ListItem\n              className={classes.listItem}\n              button\n              component={Link}\n              to={`/b/${urlID}`}\n            >\n              <ListItemIcon className={classes.icon}>\n                <DeveloperBoardIcon style={{ color: grey[500] }} />\n              </ListItemIcon>\n              <ListItemText className={classes.text} primary=\"Board\" />\n            </ListItem>\n            <ListItem\n              className={classes.listItem}\n              button\n              component={Link}\n              to={`/b/${urlID}/s`}\n            >\n              <ListItemIcon className={classes.icon}>\n                <SettingsIcon style={{ color: grey[500] }} />\n              </ListItemIcon>\n              <ListItemText className={classes.text} primary=\"Settings\" />\n            </ListItem>\n          </>\n        ) : null }\n      </List>\n    </Box>\n  );\n};\n\nDrawerList.propTypes = {\n  urlID: PropTypes.string,\n};\n\nDrawerList.defaultProps = {\n  urlID: undefined,\n};\n\nexport default DrawerList;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles, fade } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { grey } from '@material-ui/core/colors';\nimport EditableTitle from './board/EditableTitle';\nimport DrawerList from './DrawerList';\n\nconst drawerWidth = 230;\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    borderBottom: '1px gainsboro solid',\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: '#043927', // Sacramento State green\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  search: {\n    position: 'relative',\n    border: '1px gainsboro solid',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.grey[400], 0.20),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.grey[500], 0.20),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: theme.palette.grey[700],\n  },\n  root: {\n    display: 'flex',\n    backgroundColor: theme.palette.grey[100],\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    height: '100vh',\n    overflow: 'auto',\n    padding: theme.spacing(2),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nconst NavigationInterface = ({\n  children,\n  title,\n  filter,\n  handleFilterChange,\n  handleTitleChange,\n  boardFeatures,\n  urlID,\n}) => {\n  const [open, setOpen] = useState(true);\n  const classes = useStyles();\n\n  const handleDrawerOpen = () => setOpen(true);\n  const handleDrawerClose = () => setOpen(false);\n\n  const staticTitle = () => (\n    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap>\n      {title}\n    </Typography>\n  );\n\n  /* The key prop is necessary so that the component updates when the title prop changes.\n   * See https://stackoverflow.com/questions/38892672 */\n  const dynamicTitle = () => (\n    <EditableTitle\n      initialTitle={title}\n      key={title}\n      TypographyProps={{\n        component: 'h1',\n        variant: 'h6',\n        nowrap: 'true',\n      }}\n      onSubmit={handleTitleChange}\n      cursor=\"text\"\n      size=\"large\"\n    />\n  );\n\n  const search = () => (\n    <div className={classes.search}>\n      <div className={classes.searchIcon}>\n        <SearchIcon />\n      </div>\n      <InputBase\n        placeholder=\"Filter cards\"\n        classes={{\n          root: classes.inputRoot,\n          input: classes.inputInput,\n        }}\n        inputProps={{ 'aria-label': 'search' }}\n        value={filter}\n        onChange={handleFilterChange}\n      />\n    </div>\n  );\n\n  return (\n    <div className={classes.root}>\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n        elevation={0}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          {/* board titles should be editable */}\n          {boardFeatures ? dynamicTitle() : staticTitle()}\n          {/* the board page requires a search field for filtering tasks */}\n          {boardFeatures ? search() : null}\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon style={{ color: grey[400] }} />\n          </IconButton>\n        </div>\n        <DrawerList urlID={urlID} />\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.appBarSpacer} />\n        {children}\n      </main>\n    </div>\n  );\n};\n\nNavigationInterface.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  filter: PropTypes.string,\n  handleFilterChange: PropTypes.func,\n  handleTitleChange: PropTypes.func,\n  boardFeatures: PropTypes.bool,\n  urlID: PropTypes.string,\n};\n\nNavigationInterface.defaultProps = {\n  filter: undefined,\n  handleFilterChange: () => {},\n  handleTitleChange: () => {},\n  boardFeatures: false,\n  urlID: undefined,\n};\n\nexport default NavigationInterface;\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport BounceLoader from 'react-spinners/BounceLoader';\n\nconst Spinner = () => (\n  <Box\n    position=\"fixed\"\n    top=\"45%\"\n    left=\"50%\"\n  >\n    <BounceLoader size={80} color=\"#009150\" />\n  </Box>\n);\n\nexport default Spinner;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: '200px',\n    marginTop: '10px',\n  },\n  addButton: {\n    padding: theme.spacing(1),\n  },\n  secondRow: {\n    display: 'flex',\n    marginTop: '5px',\n    maxHeight: '30px',\n  },\n}));\n\nconst ButtonToTextField = ({\n  onSubmit,\n  title,\n  label,\n}) => {\n  const [openTextField, setOpenTextField] = useState(false);\n  const [text, setText] = useState('');\n\n  const classes = useStyles();\n\n  const handleOpen = () => {\n    setOpenTextField(true);\n  };\n\n  const handleCancel = () => {\n    setOpenTextField(false);\n    setText('');\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (text !== '') {\n      setOpenTextField(false);\n      onSubmit(text);\n      setText('');\n    }\n  };\n\n  const detectEnterKey = (event) => {\n    if (event.keyCode === 13) {\n      handleSubmit(event);\n    }\n  };\n\n  const button = () => (\n    <div className={classes.root}>\n      <Button\n        color=\"secondary\"\n        className={classes.addButton}\n        onClick={handleOpen}\n      >\n        {title}\n      </Button>\n    </div>\n  );\n\n  const textField = () => (\n    <div className={classes.root}>\n      <form onSubmit={handleSubmit}>\n        <TextField\n          variant=\"outlined\"\n          color=\"secondary\"\n          size=\"small\"\n          label={label}\n          value={text}\n          onKeyDown={detectEnterKey}\n          onChange={({ target }) => setText(target.value)}\n          autoFocus\n          multiline\n        />\n      </form>\n      <div className={classes.secondRow}>\n        <Button\n          variant=\"contained\"\n          size=\"small\"\n          color=\"secondary\"\n          className={classes.addButton}\n          onClick={handleSubmit}\n        >\n          {title}\n        </Button>\n        <IconButton aria-label=\"delete\" onClick={handleCancel}>\n          <CloseIcon />\n        </IconButton>\n      </div>\n    </div>\n  );\n\n  return openTextField ? textField() : button();\n};\n\nButtonToTextField.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default ButtonToTextField;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport CloseIcon from '@material-ui/icons/Close';\nimport EditableTitle from './EditableTitle';\n\nconst useStyles = makeStyles((theme) => ({\n  dialog: {\n    backgroundColor: theme.palette.grey[50],\n    boxShadow: 'none',\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  descriptionCloseButton: {\n    '&:hover': {\n      backgroundColor: 'inherit',\n    },\n  },\n  description: {\n    marginBlock: '10px',\n    padding: '4px 10px',\n    height: '60px',\n    width: '92%',\n    fontFamily: 'arial',\n  },\n  descriptionButton: {\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    backgroundColor: '#F0F0F0',\n    '&:hover': {\n      backgroundColor: '#E8E8E8',\n    },\n  },\n  descriptionTextArea: {\n    resize: 'none',\n    fontFamily: 'roboto, sans-serif',\n    '&:focus': {\n      outline: 'none',\n      boxShadow: `0 0 0 2px ${theme.palette.primary.light}`,\n    },\n  },\n}));\n\nconst CardDialog = ({\n  card,\n  columnTitle,\n  open,\n  handleClose,\n  updateTitle,\n  updateDescription,\n}) => {\n  const [editDescription, setEditDescription] = useState(false);\n  const [description, setDescription] = useState(card.description ? card.description : '');\n  const classes = useStyles();\n\n  const resetDescription = () => {\n    setDescription(card.description);\n    setEditDescription(false);\n  };\n\n  const handleDescriptionSubmit = () => {\n    setEditDescription(false);\n    updateDescription(description);\n  };\n\n  const descriptionButton = () => {\n    const placeholderText = () => (\n      <Box color=\"gray\">\n        <Typography>\n          Enter a description...\n        </Typography>\n      </Box>\n    );\n\n    const text = () => (\n      <Typography>\n        {description}\n      </Typography>\n    );\n\n    return (\n      <ButtonBase\n        className={`${classes.description} ${classes.descriptionButton}`}\n        onClick={() => setEditDescription(true)}\n      >\n        {description === ''\n          ? placeholderText()\n          : text()}\n      </ButtonBase>\n    );\n  };\n\n  const descriptionInput = () => (\n    <form onSubmit={handleDescriptionSubmit}>\n      <textarea\n        className={`${classes.description} ${classes.descriptionTextArea}`}\n        type=\"text\"\n        value={description}\n        onChange={({ target }) => setDescription(target.value)}\n        placeholder=\"Enter a description...\"\n        aria-label={`Enter a description for the task ${card.title}`}\n        // eslint-disable-next-line jsx-a11y/no-autofocus\n        autoFocus\n      />\n      <Button\n        variant=\"contained\"\n        size=\"small\"\n        color=\"secondary\"\n        className={classes.addButton}\n        type=\"submit\"\n      >\n        Save\n      </Button>\n      <IconButton\n        aria-label=\"delete\"\n        onClick={resetDescription}\n        className={classes.descriptionCloseButton}\n      >\n        <CloseIcon />\n      </IconButton>\n    </form>\n  );\n\n  return (\n    <Dialog\n      PaperProps={{\n        className: classes.dialog,\n      }}\n      open={open}\n      onClose={handleClose}\n      fullWidth\n      scroll=\"body\"\n    >\n      <DialogTitle onClose={handleClose} disableTypography>\n        <Box display=\"flex\">\n          <Box marginTop={1} marginRight=\"10px\">\n            <AssignmentIcon />\n          </Box>\n          <Box flexGrow={1} marginRight={4}>\n            <EditableTitle\n              initialTitle={card.title}\n              TypographyProps={{\n                variant: 'h6',\n              }}\n              onSubmit={updateTitle}\n              cursor=\"text\"\n              size=\"large\"\n            />\n          </Box>\n        </Box>\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n        <Box marginLeft=\"36px\" color=\"#505050\">\n          <Typography variant=\"body2\">\n            {`in list ${columnTitle}`}\n          </Typography>\n        </Box>\n      </DialogTitle>\n      <DialogContent>\n        <Box fontWeight=\"fontWeightBold\" fontSize=\"16px\">\n          Description\n        </Box>\n        {editDescription ? descriptionInput() : descriptionButton()}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nCardDialog.propTypes = {\n  card: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    _id: PropTypes.string.isRequired,\n  }).isRequired,\n  open: PropTypes.bool.isRequired,\n  columnTitle: PropTypes.string.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  updateTitle: PropTypes.func.isRequired,\n  updateDescription: PropTypes.func.isRequired,\n};\n\nexport default CardDialog;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Divider from '@material-ui/core/Divider';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    color: 'darkgray',\n    '&:hover': {\n      backgroundColor: 'inherit',\n      color: theme.palette.grey[800],\n    },\n  },\n  focusedButton: {\n    backgroundColor: 'inherit',\n    color: theme.palette.grey[800],\n  },\n  menuItem: {\n    paddingBlock: '5px',\n  },\n  delete: {\n    '&:hover': {\n      backgroundColor: theme.palette.red,\n      color: 'white',\n    },\n  },\n}));\n\nconst DropdownMenu = ({ onClick, onClose, onRename, onDelete, open }) => {\n  const [popupAnchor, setPopupAnchor] = useState(null);\n\n  const classes = useStyles();\n\n  const handleClick = (event) => {\n    setPopupAnchor(event.currentTarget);\n    onClick();\n  };\n\n  const handleRename = () => {\n    setPopupAnchor(null);\n    onRename();\n  };\n\n  const handleDelete = () => {\n    setPopupAnchor(null);\n    onDelete();\n  };\n\n  const handleClose = () => {\n    setPopupAnchor(null);\n    onClose();\n  };\n\n  return (\n    <>\n      <IconButton\n        className={popupAnchor ? classes.focusedButton : classes.button}\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      <Menu\n        anchorEl={popupAnchor}\n        open={Boolean(popupAnchor) && open}\n        onClose={handleClose}\n        getContentAnchorEl={null}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n        elevation={4}\n        MenuListProps={{ disablePadding: true }}\n        keepMounted\n      >\n        <MenuItem\n          className={classes.menuItem}\n          onClick={handleRename}\n        >\n          Rename\n        </MenuItem>\n        <Divider />\n        <MenuItem\n          className={`${classes.menuItem} ${classes.delete}`}\n          onClick={handleDelete}\n        >\n          Delete\n        </MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nDropdownMenu.propTypes = {\n  onClick: PropTypes.func,\n  onClose: PropTypes.func,\n  onRename: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  open: PropTypes.bool,\n};\n\nDropdownMenu.defaultProps = {\n  onClick: () => { },\n  onClose: () => { },\n  open: true,\n};\n\nexport default DropdownMenu;\n","import React, { useState, useRef } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport ListItem from '@material-ui/core/ListItem';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Draggable } from 'react-beautiful-dnd';\nimport CardDialog from './CardDialog';\nimport DropdownMenu from './DropdownMenu';\nimport EditableTitle from './EditableTitle';\n\nconst useStyles = makeStyles({\n  parent: {\n    display: 'flex',\n    position: 'relative',\n    cursor: 'pointer',\n    '&:hover $card': {\n      backgroundColor: 'rgba(185, 255, 190, 0.4)',\n    },\n  },\n  card: {\n    marginTop: '10px',\n    paddingBlock: '7px',\n    paddingInline: '10px',\n    backgroundColor: 'white',\n    borderRadius: '4px',\n    boxShadow: ' 0 1.25px 1px 0 rgba(0, 0, 0, 0.15)',\n    '&:hover': {\n      // otherwise, cursor defaults to grab\n      cursor: 'pointer',\n      '& + $dropdown': {\n        opacity: 1,\n        color: 'darkgrey',\n      },\n    },\n    '&.Mui-focusVisible': {\n      backgroundColor: 'white',\n    },\n  },\n  cardFocus: {\n    backgroundColor: 'rgba(185, 255, 190, 0.4)',\n  },\n  dropdown: {\n    opacity: 0,\n    position: 'absolute',\n    top: 4,\n    right: -4,\n    '&:hover': {\n      opacity: 1,\n    },\n  },\n  dropdownFocus: {\n    opacity: 1,\n  },\n});\n\nconst IssueCard = ({\n  card,\n  index,\n  columnTitle,\n  deleteCard,\n  updateCard,\n}) => {\n  const [openDialog, setOpenDialog] = useState(false);\n  const [openMenu, setOpenMenu] = useState(false);\n  const [editingTitle, setEditingTitle] = useState(false);\n  const classes = useStyles();\n  const titleRef = useRef();\n\n  const updateDescription = (description) => {\n    updateCard({\n      ...card,\n      description,\n    });\n  };\n\n  const updateTitle = (title) => {\n    updateCard({\n      ...card,\n      title,\n    });\n\n    /* Without this delay, editingTitle will be set to false immediately.\n     * This means that if a user clicked on the card to close the title,\n     * the card dialog will open. Setting the delay avoids this scenario. */\n    setTimeout(() => {\n      setEditingTitle(false);\n    }, 200);\n  };\n\n  const handleDelete = () => {\n    deleteCard(card._id);\n  };\n\n  const handleRename = () => {\n    setOpenMenu(false);\n    setEditingTitle(true);\n    titleRef.current.toggle();\n  };\n\n  const handleDialogOpen = () => {\n    if (!editingTitle) {\n      setOpenDialog(true);\n    }\n  };\n\n  const handleDialogClose = () => {\n    setOpenDialog(false);\n  };\n\n  const handleMenuOpen = () => {\n    if (!editingTitle) {\n      setOpenMenu(true);\n    }\n  };\n\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <>\n      <Draggable draggableId={card._id} index={index}>\n        {(provided) => (\n          <div className={classes.parent}>\n            <ListItem\n              className={clsx(classes.card, openMenu && classes.cardFocus)}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              ref={provided.innerRef}\n              button\n              onClick={handleDialogOpen}\n            >\n              <Box marginRight=\"20px\">\n                <EditableTitle\n                  ref={titleRef}\n                  key={card.title}\n                  initialTitle={card.title}\n                  TypographyProps={{\n                    variant: 'body2',\n                  }}\n                  onSubmit={updateTitle}\n                  size=\"small\"\n                  disableClick\n                />\n              </Box>\n            </ListItem>\n            <div className={clsx(classes.dropdown, openMenu && classes.dropdownFocus)}>\n              <DropdownMenu\n                open={openMenu}\n                onDelete={handleDelete}\n                onClick={handleMenuOpen}\n                onClose={handleMenuClose}\n                onRename={handleRename}\n              />\n            </div>\n          </div>\n        )}\n      </Draggable>\n      <CardDialog\n        card={card}\n        open={openDialog}\n        columnTitle={columnTitle}\n        handleClose={handleDialogClose}\n        updateTitle={updateTitle}\n        updateDescription={updateDescription}\n      />\n    </>\n  );\n};\n\nIssueCard.propTypes = {\n  card: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    _id: PropTypes.string.isRequired,\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  columnTitle: PropTypes.string.isRequired,\n  deleteCard: PropTypes.func.isRequired,\n  updateCard: PropTypes.func.isRequired,\n};\n\nexport default IssueCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IssueCard from './IssueCard';\n\n/* React.memo prevents dragging a card over a column from\n * re-rendering the tasks in that column. */\nconst CardList = React.memo(({\n  cards,\n  filter,\n  columnTitle,\n  deleteCard,\n  updateCard,\n}) => (\n  cards\n    .filter((card) => (\n      card.title.toLowerCase().includes(filter.toLowerCase())\n    ))\n    .map((card, index) => (\n      <IssueCard\n        key={card._id}\n        card={card}\n        index={index}\n        columnTitle={columnTitle}\n        updateCard={updateCard}\n        deleteCard={deleteCard}\n      />\n    ))\n));\n\nCardList.propTypes = {\n  cards: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      _id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  filter: PropTypes.string.isRequired,\n  columnTitle: PropTypes.string.isRequired,\n  deleteCard: PropTypes.func.isRequired,\n  updateCard: PropTypes.func.isRequired,\n};\n\nexport default CardList;\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Box from '@material-ui/core/Box';\nimport List from '@material-ui/core/List';\nimport Paper from '@material-ui/core/Paper';\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\nimport ButtonToTextField from './ButtonToTextField';\nimport CardList from './CardList';\nimport DropdownMenu from './DropdownMenu';\nimport EditableTitle from './EditableTitle';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginLeft: theme.spacing(1.5),\n    paddingBottom: theme.spacing(1),\n    paddingInline: theme.spacing(1),\n    backgroundColor: '#ebebeb',\n    boxShadow: 'rgba(0, 0, 0, 0.1) 0px 1px 2px 0px;',\n    minWidth: '240px',\n    width: '280px',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n  },\n  title: {\n    fontWeight: 'bold',\n    paddingLeft: theme.spacing(2),\n  },\n  header: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: '-8px',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n}));\n\nconst Column = ({\n  column,\n  index,\n  filter,\n  deleteColumn,\n  updateColumn,\n}) => {\n  const classes = useStyles();\n\n  const titleRef = useRef();\n\n  const handleRename = () => {\n    titleRef.current.toggle();\n  };\n\n  const handleDelete = () => {\n    deleteColumn(column._id);\n  };\n\n  const editTitle = (newTitle) => {\n    updateColumn({\n      ...column,\n      title: newTitle,\n    });\n  };\n\n  const addCard = (title) => {\n    updateColumn({\n      ...column,\n      cards: column.cards.concat({ title }),\n    }, true);\n  };\n\n  const updateCard = async (updatedCard) => {\n    updateColumn({\n      ...column,\n      cards: column.cards\n        .map((card) => (card._id !== updatedCard._id ? card : updatedCard)),\n    });\n  };\n\n  const deleteCard = async (cardId) => {\n    const idx = column.cards.findIndex((card) => card._id === cardId);\n    const newCards = Array.from(column.cards);\n    newCards.splice(idx, 1);\n\n    updateColumn({\n      ...column,\n      cards: newCards,\n    });\n  };\n\n  return (\n    <Draggable draggableId={column._id} index={index}>\n      {(provided) => (\n        <Paper\n          className={classes.paper}\n          elevation={0}\n          {...provided.draggableProps}\n          ref={provided.innerRef}\n        >\n          <div className={classes.header} {...provided.dragHandleProps}>\n            <Box flexGrow={1}>\n              <EditableTitle\n                initialTitle={column.title}\n                onSubmit={editTitle}\n                TypographyProps={{\n                  className: classes.title,\n                  gutterBottom: true,\n                }}\n                ref={titleRef}\n                backgroundColor=\"#f5f5f5\"\n              />\n            </Box>\n            <Box marginRight=\"-12px\">\n              <DropdownMenu\n                onRename={handleRename}\n                onDelete={handleDelete}\n              />\n            </Box>\n          </div>\n          <List>\n            <Droppable droppableId={column._id} type=\"card\">\n              {/* eslint-disable-next-line no-shadow */}\n              {(provided) => (\n                // without min height, cannot drag cards into empty columns\n                <Box\n                  minHeight=\"11px\"\n                  marginTop=\"-10px\"\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                >\n                  <CardList\n                    cards={column.cards}\n                    filter={filter}\n                    columnTitle={column.title}\n                    updateCard={updateCard}\n                    deleteCard={deleteCard}\n                  />\n                  {provided.placeholder}\n                </Box>\n              )}\n            </Droppable>\n            <ButtonToTextField\n              onSubmit={addCard}\n              title=\"Add Card\"\n              label=\"Card title\"\n            />\n          </List>\n        </Paper>\n      )}\n    </Draggable>\n  );\n};\n\nColumn.propTypes = {\n  column: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    cards: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        _id: PropTypes.string.isRequired,\n      }),\n    ).isRequired,\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  filter: PropTypes.string.isRequired,\n  deleteColumn: PropTypes.func.isRequired,\n  updateColumn: PropTypes.func.isRequired,\n};\n\nexport default Column;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport NavigationInterface from '../components/Navigation';\nimport Column from '../components/board/Column';\nimport ButtonToTextField from '../components/board/ButtonToTextField';\nimport Spinner from '../components/Spinner';\nimport boardService from '../services/boards';\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'flex',\n    alignItems: 'flex-start',\n  },\n});\n\nconst Board = ({ match }) => {\n  const [filter, setFilter] = useState('');\n  const [board, setBoard] = useState({\n    title: '',\n    columns: [],\n  });\n\n  const classes = useStyles();\n\n  // load board data from server on startup\n  useEffect(async () => {\n    const retrievedBoard = await boardService.getBoard(match.params.id);\n    setBoard(retrievedBoard);\n  }, []);\n\n  /* Update the frontend before the backend. Use for re-ordering cards and columns\n   * with drag-and-drop, as updating the local state first prevents lag. */\n  const updateBoardFrontend = async (newBoard) => {\n    setBoard(newBoard);\n    await boardService.updateBoard(newBoard);\n  };\n\n  /* Update the backend before the frontend. Use for adding and updating columns and cards,\n   * as the app relies on the server to set the \"_id\" fields of these objects. */\n  const updateBoardBackend = async (newBoard) => {\n    const savedBoard = await boardService.updateBoard(newBoard);\n    setBoard(savedBoard);\n  };\n\n  const addColumn = async (title) => {\n    const newColumn = {\n      cards: [],\n      title,\n    };\n\n    updateBoardBackend({\n      ...board,\n      columns: board.columns.concat(newColumn),\n    });\n  };\n\n  const updateColumn = async (updatedColumn, newCardAdded) => {\n    const newBoard = {\n      ...board,\n      columns: board.columns\n        .map((col) => (col._id !== updatedColumn._id ? col : updatedColumn)),\n    };\n\n    // adding a card requires the backend to generate an id for the card\n    if (newCardAdded) updateBoardBackend(newBoard);\n\n    else updateBoardFrontend(newBoard);\n  };\n\n  const deleteColumn = async (columnId) => {\n    const index = board.columns.findIndex((col) => col._id === columnId);\n    const newColumns = Array.from(board.columns);\n    newColumns.splice(index, 1);\n\n    updateBoardFrontend({\n      ...board,\n      columns: newColumns,\n    });\n  };\n\n  const editBoardTitle = (title) => {\n    updateBoardFrontend({\n      ...board,\n      title,\n    });\n  };\n\n  const onDragEnd = async ({ destination, source, type }) => {\n    // make sure that the destination is valid\n    if (!destination) return;\n\n    // make sure that user dragged card/column to new location\n    if (\n      destination.droppableId === source.droppableId\n      && destination.index === source.index\n    ) {\n      return;\n    }\n\n    // Move a column\n    if (type === 'column') {\n      const newColumns = Array.from(board.columns);\n      const draggedColumn = newColumns.splice(source.index, 1)[0];\n      newColumns.splice(destination.index, 0, draggedColumn);\n\n      updateBoardFrontend({\n        ...board,\n        columns: newColumns,\n      });\n      return;\n    }\n\n    const startColumn = board.columns.find((col) => col._id === source.droppableId);\n    const endColumn = board.columns.find((col) => col._id === destination.droppableId);\n\n    // Move a card within a column\n    if (startColumn === endColumn) {\n      // preserve immutability by creating a new copy of the card array\n      const newCards = Array.from(startColumn.cards);\n\n      // remove the card from the source column\n      const draggedCard = newCards.splice(source.index, 1)[0];\n\n      // insert the task at the destination index\n      newCards.splice(destination.index, 0, draggedCard);\n\n      const changedColumn = {\n        ...startColumn,\n        cards: newCards,\n      };\n\n      updateBoardFrontend({\n        ...board,\n        columns: board.columns\n          .map((col) => (col._id !== changedColumn._id ? col : changedColumn)),\n      });\n      return;\n    }\n\n    // Move a card between columns\n    const startColumnCards = Array.from(startColumn.cards);\n    const draggedCard = startColumnCards.splice(source.index, 1)[0];\n    const newStartColumn = {\n      ...startColumn,\n      cards: startColumnCards,\n    };\n\n    const endColumnCards = Array.from(endColumn.cards);\n    endColumnCards.splice(destination.index, 0, draggedCard);\n    const newEndColumn = {\n      ...endColumn,\n      cards: endColumnCards,\n    };\n\n    updateBoardFrontend({\n      ...board,\n      columns: board.columns\n        .map((col) => {\n          if (col._id === newStartColumn._id) return newStartColumn;\n          if (col._id === newEndColumn._id) return newEndColumn;\n          return col;\n        }),\n    });\n  };\n\n  const boardInterface = () => (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"all-columns\" type=\"column\" direction=\"horizontal\">\n        {(provided) => (\n          <div\n            className={classes.container}\n            {...provided.droppableProps}\n            ref={provided.innerRef}\n          >\n            {board.columns.map((column, index) => (\n              <Column\n                key={column._id}\n                column={column}\n                index={index}\n                filter={filter}\n                updateColumn={updateColumn}\n                deleteColumn={deleteColumn}\n              />\n            ))}\n            {provided.placeholder}\n            {/* Initially a button for adding a column to the board. If the button is\n                pressed, turns into a text field that requests a name for the column */}\n            <Box marginLeft={1.5}>\n              <ButtonToTextField\n                onSubmit={addColumn}\n                title=\"Add Column\"\n                label=\"Column title\"\n              />\n            </Box>\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n\n  return (\n    <NavigationInterface\n      title={board.title}\n      filter={filter}\n      handleFilterChange={(event) => setFilter(event.target.value)}\n      handleTitleChange={editBoardTitle}\n      urlID={board.url_id}\n      boardFeatures\n    >\n      {board.title ? boardInterface() : <Spinner />}\n    </NavigationInterface>\n  );\n};\n\nBoard.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  }).isRequired,\n};\n\nexport default Board;\n"],"sourceRoot":""}