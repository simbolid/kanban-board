{"version":3,"sources":["components/board/EditableTitle.jsx","services/boards.js","components/DrawerList.jsx","components/Navigation.jsx","../node_modules/@material-ui/core/esm/DialogContentText/DialogContentText.js","../node_modules/@material-ui/core/esm/DialogActions/DialogActions.js","components/settings/DeleteButton.jsx","pages/Settings.jsx"],"names":["useStyles","makeStyles","text","cursor","props","textField","paddingInline","paddingBlock","height","backgroundColor","smallTextField","fontSize","largeTextField","fontWeight","EditableTitle","React","forwardRef","ref","initialTitle","onSubmit","TypographyProps","size","disableClick","useState","title","setTitle","isEditing","setIsEditing","classes","inputRef","useRef","toggle","useEffect","current","focus","handleSubmit","event","preventDefault","className","onClick","onKeyDown","role","tabIndex","useImperativeHandle","mouseEvent","onClickAway","InputProps","inputProps","clsx","variant","color","value","onChange","target","fullWidth","propTypes","PropTypes","string","isRequired","func","object","bool","defaultProps","baseUrl","getBoard","id","a","axios","get","response","data","getBoards","addBoard","newBoard","post","deleteBoard","delete","updateBoard","board","put","_id","icon","marginLeft","minWidth","listItem","DrawerList","urlID","Box","grey","List","ListItem","button","component","Link","to","ListItemIcon","style","ListItemText","primary","undefined","drawerWidth","theme","toolbar","paddingRight","toolbarIcon","display","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","borderBottom","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","easeOut","enteringScreen","menuButton","marginRight","menuButtonHidden","flexShrink","drawerPaper","inputRoot","inputInput","spacing","paddingLeft","breakpoints","up","search","position","border","borderRadius","shape","fade","palette","searchIcon","pointerEvents","root","appBarSpacer","content","overflow","contentShift","NavigationInterface","children","filter","handleFilterChange","handleTitleChange","boardFeatures","open","setOpen","AppBar","elevation","Toolbar","IconButton","edge","nowrap","Typography","noWrap","InputBase","placeholder","input","Drawer","paper","DialogContentText","_extends","withStyles","marginBottom","name","DialogActions","_props$disableSpacing","disableSpacing","other","_objectWithoutProperties","flex","red","borderColor","dialog","boxShadow","DeleteButton","openDialog","setOpenDialog","history","useHistory","handleClose","boardService","push","Button","disableElevation","Dialog","PaperProps","onClose","DialogTitle","DialogContent","Settings","match","Navigation","params","margin"],"mappings":"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","file":"static/js/6.4f953ac0.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef, useImperativeHandle } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  text: {\n    cursor: (props) => props.cursor,\n  },\n  textField: {\n    paddingInline: '10px',\n    paddingBlock: '5px',\n    height: '16px',\n    backgroundColor: (props) => props.backgroundColor,\n  },\n  smallTextField: {\n    height: '14px',\n    fontSize: '0.875rem',\n  },\n  largeTextField: {\n    height: '22px',\n    fontSize: '1.25rem',\n    fontWeight: '500',\n  },\n});\n\nconst EditableTitle = React.forwardRef(({\n  initialTitle,\n  onSubmit,\n  TypographyProps,\n  size,\n  disableClick,\n  ...props\n}, ref) => {\n  const [title, setTitle] = useState(initialTitle);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const classes = useStyles(props);\n  const inputRef = useRef(false);\n\n  const toggle = () => {\n    setIsEditing(!isEditing);\n  };\n\n  /* We have to manually focus input because autofocus does not work\n     when the input field is opened from the drop-down menu. */\n  useEffect(() => {\n    if (isEditing) {\n      inputRef.current.focus();\n    }\n  }, [isEditing]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (title !== '') {\n      setIsEditing(false);\n      onSubmit(title);\n    }\n  };\n\n  const clickableText = () => (\n    <div\n      className={classes.text}\n      onClick={toggle}\n      onKeyDown={toggle}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <Typography {...TypographyProps}>\n        {title}\n      </Typography>\n    </div>\n  );\n\n  const disabledText = () => (\n    <div className={classes.text}>\n      <Typography {...TypographyProps}>\n        {title}\n      </Typography>\n    </div>\n  );\n\n  const text = disableClick ? disabledText() : clickableText();\n\n  /* ClickAwayListener's mouse event must be mouse down so that preventDefault()\n     prevent the blur event. (Event order is mousedown -> blur -> mouseup -> click) */\n  const textField = () => (\n    <ClickAwayListener mouseEvent=\"onMouseDown\" onClickAway={handleSubmit}>\n      <form onSubmit={handleSubmit}>\n        <TextField\n          className={classes.text}\n          InputProps={{\n            inputProps: {\n              className: clsx(\n                classes.textField,\n                (size === 'small') && classes.smallTextField,\n                (size === 'large') && classes.largeTextField,\n              ),\n            },\n          }}\n          variant=\"outlined\"\n          color=\"secondary\"\n          value={title}\n          onChange={({ target }) => setTitle(target.value)}\n          inputRef={inputRef}\n          fullWidth\n        />\n      </form>\n    </ClickAwayListener>\n  );\n\n  useImperativeHandle(ref, () => ({\n    toggle,\n  }));\n\n  return (\n    isEditing ? textField() : text\n  );\n});\n\nEditableTitle.propTypes = {\n  initialTitle: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  TypographyProps: PropTypes.object,\n  disableClick: PropTypes.bool,\n  size: PropTypes.string,\n  cursor: PropTypes.string,\n  backgroundColor: PropTypes.string,\n};\n\nEditableTitle.defaultProps = {\n  TypographyProps: { },\n  disableClick: false,\n  size: 'medium',\n  cursor: 'pointer',\n  backgroundColor: 'inherit',\n};\n\nexport default EditableTitle;\n","import axios from 'axios';\n\nconst baseUrl = '/api/boards';\n\nconst getBoard = async (id) => {\n  const response = await axios.get(`${baseUrl}/${id}`);\n  return response.data;\n};\n\nconst getBoards = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst addBoard = async (newBoard) => {\n  const response = await axios.post(baseUrl, newBoard);\n  return response.data;\n};\n\nconst deleteBoard = async (id) => {\n  await axios.delete(`${baseUrl}/${id}`);\n};\n\nconst updateBoard = async (board) => {\n  const response = await axios.put(`${baseUrl}/${board._id}`, board);\n  return response.data;\n};\n\nexport default {\n  getBoard,\n  getBoards,\n  addBoard,\n  deleteBoard,\n  updateBoard,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport HomeIcon from '@material-ui/icons/Home';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport DeveloperBoardIcon from '@material-ui/icons/DeveloperBoard';\nimport { grey } from '@material-ui/core/colors';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n  icon: {\n    marginLeft: '10px',\n    minWidth: '30px',\n  },\n  text: {\n    marginLeft: '20px',\n  },\n  listItem: {\n    '&:hover': {\n      backgroundColor: '#1f4437',\n    },\n  },\n});\n\n/* navigation items that are only visible once the user has\n * selected a board */\nconst DrawerList = ({ urlID }) => {\n  const classes = useStyles();\n\n  return (\n    <Box color={grey[300]}>\n      <List>\n        <ListItem\n          className={classes.listItem}\n          button\n          component={Link}\n          to=\"/\"\n        >\n          <ListItemIcon className={classes.icon}>\n            <HomeIcon style={{ color: grey[500] }} />\n          </ListItemIcon>\n          <ListItemText className={classes.text} primary=\"Home\" />\n        </ListItem>\n        <ListItem\n          className={classes.listItem}\n          button\n          component={Link}\n          to=\"/dashboard\"\n        >\n          <ListItemIcon className={classes.icon}>\n            <DashboardIcon style={{ color: grey[500] }} />\n          </ListItemIcon>\n          <ListItemText className={classes.text} primary=\"Dashboard\" />\n        </ListItem>\n        { urlID ? (\n          <>\n            <ListItem\n              className={classes.listItem}\n              button\n              component={Link}\n              to={`/b/${urlID}`}\n            >\n              <ListItemIcon className={classes.icon}>\n                <DeveloperBoardIcon style={{ color: grey[500] }} />\n              </ListItemIcon>\n              <ListItemText className={classes.text} primary=\"Board\" />\n            </ListItem>\n            <ListItem\n              className={classes.listItem}\n              button\n              component={Link}\n              to={`/b/${urlID}/s`}\n            >\n              <ListItemIcon className={classes.icon}>\n                <SettingsIcon style={{ color: grey[500] }} />\n              </ListItemIcon>\n              <ListItemText className={classes.text} primary=\"Settings\" />\n            </ListItem>\n          </>\n        ) : null }\n      </List>\n    </Box>\n  );\n};\n\nDrawerList.propTypes = {\n  urlID: PropTypes.string,\n};\n\nDrawerList.defaultProps = {\n  urlID: undefined,\n};\n\nexport default DrawerList;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles, fade } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { grey } from '@material-ui/core/colors';\nimport EditableTitle from './board/EditableTitle';\nimport DrawerList from './DrawerList';\n\nconst drawerWidth = 230;\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    borderBottom: '1px gainsboro solid',\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: '#043927', // Sacramento State green\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  search: {\n    position: 'relative',\n    border: '1px gainsboro solid',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.grey[400], 0.20),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.grey[500], 0.20),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: theme.palette.grey[700],\n  },\n  root: {\n    display: 'flex',\n    backgroundColor: theme.palette.grey[100],\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    height: '100vh',\n    overflow: 'auto',\n    padding: theme.spacing(2),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nconst NavigationInterface = ({\n  children,\n  title,\n  filter,\n  handleFilterChange,\n  handleTitleChange,\n  boardFeatures,\n  urlID,\n}) => {\n  const [open, setOpen] = useState(true);\n  const classes = useStyles();\n\n  const handleDrawerOpen = () => setOpen(true);\n  const handleDrawerClose = () => setOpen(false);\n\n  const staticTitle = () => (\n    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap>\n      {title}\n    </Typography>\n  );\n\n  /* The key prop is necessary so that the component updates when the title prop changes.\n   * See https://stackoverflow.com/questions/38892672 */\n  const dynamicTitle = () => (\n    <EditableTitle\n      initialTitle={title}\n      key={title}\n      TypographyProps={{\n        component: 'h1',\n        variant: 'h6',\n        nowrap: 'true',\n      }}\n      onSubmit={handleTitleChange}\n      cursor=\"text\"\n      size=\"large\"\n    />\n  );\n\n  const search = () => (\n    <div className={classes.search}>\n      <div className={classes.searchIcon}>\n        <SearchIcon />\n      </div>\n      <InputBase\n        placeholder=\"Filter cards\"\n        classes={{\n          root: classes.inputRoot,\n          input: classes.inputInput,\n        }}\n        inputProps={{ 'aria-label': 'search' }}\n        value={filter}\n        onChange={handleFilterChange}\n      />\n    </div>\n  );\n\n  return (\n    <div className={classes.root}>\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n        elevation={0}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          {/* board titles should be editable */}\n          {boardFeatures ? dynamicTitle() : staticTitle()}\n          {/* the board page requires a search field for filtering tasks */}\n          {boardFeatures ? search() : null}\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon style={{ color: grey[400] }} />\n          </IconButton>\n        </div>\n        <DrawerList urlID={urlID} />\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.appBarSpacer} />\n        {children}\n      </main>\n    </div>\n  );\n};\n\nNavigationInterface.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  filter: PropTypes.string,\n  handleFilterChange: PropTypes.func,\n  handleTitleChange: PropTypes.func,\n  boardFeatures: PropTypes.bool,\n  urlID: PropTypes.string,\n};\n\nNavigationInterface.defaultProps = {\n  filter: undefined,\n  handleFilterChange: () => {},\n  handleTitleChange: () => {},\n  boardFeatures: false,\n  urlID: undefined,\n};\n\nexport default NavigationInterface;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    marginBottom: 12\n  }\n};\nvar DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(props, ref) {\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"textSecondary\",\n    ref: ref\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContentText'\n})(DialogContentText);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8,\n    justifyContent: 'flex-end',\n    flex: '0 0 auto'\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogActions'\n})(DialogActions);","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport boardService from '../../services/boards';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    color: theme.palette.red,\n    borderColor: theme.palette.red,\n    '&:hover': {\n      color: 'white',\n      backgroundColor: theme.palette.red,\n    },\n  },\n  dialog: {\n    boxShadow: 'none',\n  },\n}));\n\nconst DeleteButton = ({ urlID }) => {\n  const [openDialog, setOpenDialog] = useState(false);\n  const classes = useStyles();\n  const history = useHistory();\n\n  const handleClickOpen = () => {\n    setOpenDialog(true);\n  };\n\n  const handleClose = () => {\n    setOpenDialog(false);\n  };\n\n  const handleSubmit = async () => {\n    await boardService.deleteBoard(urlID);\n    history.push('/dashboard');\n  };\n\n  return (\n    <>\n      <Button\n        variant=\"outlined\"\n        className={classes.button}\n        onClick={handleClickOpen}\n        disableElevation\n      >\n        Delete this board\n      </Button>\n      <Dialog\n        PaperProps={{\n          className: classes.dialog,\n        }}\n        open={openDialog}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Delete this board?</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            This action cannot be undone.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={handleSubmit}\n            color=\"secondary\"\n          >\n            Continue\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nDeleteButton.propTypes = {\n  urlID: PropTypes.string.isRequired,\n};\n\nexport default DeleteButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport NavigationInterface from '../components/Navigation';\nimport DeleteButton from '../components/settings/DeleteButton';\n\nconst Settings = ({ match }) => (\n  <NavigationInterface\n    title=\"Settings\"\n    urlID={match.params.id}\n  >\n    <Box marginLeft={2}>\n      <Typography variant=\"subtitle1\">\n        <Box margin={1}>\n          <Box fontWeight=\"fontWeightMedium\">\n            Delete Board\n          </Box>\n          <Box color=\"#303030\">\n            Warning: once a board is deleted, it cannot be brought back.\n          </Box>\n        </Box>\n      </Typography>\n      <DeleteButton urlID={match.params.id} />\n    </Box>\n  </NavigationInterface>\n);\n\nSettings.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  }).isRequired,\n};\n\nexport default Settings;\n"],"sourceRoot":""}